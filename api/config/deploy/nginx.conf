# Add on nginx.conf `server_tokens off;` to hide nginx version
# Add on `http` block

client_body_buffer_size     100M;
client_max_body_size        100M;

# cat > /etc/nginx/sites-enabled/default

upstream intime {
  server unix://srv/web/intime/shared/sockets/puma.sock;
}

# server {
#   listen 80;
#   server_name _;

#   root /srv/web/intime/current/public;

#   gzip on;
#   gzip_static on;
#   gzip_types text/plain application/json application/javascript application/x-javascript text/javascript text/xml application/xml text/css;

#   root /srv/web/intime/current/public;
#   index index.html;

#   error_log /srv/web/intime/shared/log/nginx_web.error.log warn;
#   access_log /srv/web/intime/shared/log/nginx_web.access.log filter;

#   # 404 if a file is requested (so the main app isn't served)
#   location ~* ^/static {
#     access_log off;
#     error_log off;
#     expires 1y;
#     add_header Cache-Control public;
#     add_header Last-Modified "";
#     add_header ETag "";

#     try_files $uri =404;
#   }

#   location ~* ^.+\.(js|css|xml|less|png|jpg|jpeg|gif|pdf|doc|txt|ico|rss|zip|mp3|rar|exe|wmv|doc|avi|ppt|mpg|mpeg|tif|wav|mov|psd|ai|xls|mp4|m4a|swf|dat|dmg|iso|flv|m4v|ttf|woff|svg|eot)$ {
#     access_log off;
#     error_log off;
#     expires 1y;
#     add_header Cache-Control public;
#     add_header Last-Modified "";
#     add_header ETag "";

#     try_files $uri =404;
#   }

#   location = /service-worker.js {
#     add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
#     if_modified_since off;
#     expires off;
#     etag off;
#   }
#   location / {
#     try_files $uri index.html;
#   }
# }

# MARK: - CORS settings
# NOTE: You canno use `if` to setup CORS
# even though there're hundreds of examples using `if` on Google
# Reference: https://www.nginx.com/resources/wiki/start/topics/depth/ifisevil/
# Thanks to: https://gist.github.com/sbuzonas/6e2dbc1218a0be0d7ae2
# WTF is this?: https://gist.github.com/algal/5480916

map $http_origin $allow_origin {
  default "";
  "~^https?://(?:[^/]*\.)?(.+)(?::[0-9]+)?$" "$http_origin";
}

map $request_method $cors_method {
  default "allowed";
  "OPTIONS" "preflight";
}

map $cors_method $cors_max_age {
  default "";
  "preflight" 1728000;
}

map $cors_method $cors_allow_methods {
  default "";
  "preflight" "GET, POST, PUT, PATCH, DELETE, OPTIONS";
}

map $cors_method $cors_allow_headers {
  default "";
  "preflight" "Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,Keep-Alive,X-Requested-With,If-Modified-Since";
}

map $cors_method $cors_content_length {
  default $initial_content_length;
  "preflight" 0;
}

map $cors_method $cors_content_type {
  default $initial_content_type;
  "preflight" "text/plain; charset=UTF-8";
}

server {
  listen 80;
  server_name _;

  gzip on;
  gzip_static on;
  gzip_types text/plain application/json application/javascript application/x-javascript text/javascript text/xml application/xml text/css;
  root /srv/web/intime/current/public;

  error_log /srv/web/intime/shared/log/nginx_api.error.log warn;
  access_log /srv/web/intime/shared/log/nginx_api.access.log;

  add_header Access-Control-Allow-Origin $allow_origin;
  add_header Access-Control-Allow-Credentials 'true';
  add_header Access-Control-Max-Age $cors_max_age;
  add_header Access-Control-Allow-Methods $cors_allow_methods;
  add_header Access-Control-Allow-Headers $cors_allow_headers;

  set $initial_content_length $sent_http_content_length;
  add_header 'Content-Length' "";
  add_header 'Content-Length' $cors_content_length;

  set $initial_content_type $sent_http_content_type;
  add_header Content-Type "";
  add_header Content-Type $cors_content_type;

  if ($request_method = 'OPTIONS') {
    return 204;
  }

  # location ^~ /.well-known/acme-challenge/ {
  #   allow all;
  # }

  location / {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto https;
    proxy_set_header Host $http_host;
    proxy_redirect off;
    proxy_pass http://intime;
  }
}